name: CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    name: Build & Unit Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Install dependencies
        run: dotnet restore src/nestflix.sln

      - name: Build Api
        run: dotnet build src/nestflix.sln -c Release

  build_docker_artifacts:
    name: Build Docker Artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1

      - name: Build Docker Images
        working-directory: "${{ github.workspace }}/src/"
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_REGISTRY: ${{ vars.ACR_URL }}/
        run: |
          docker compose -f docker-compose.yml build \
            --build-arg ${DOCKER_FILE_ARGS:-""}

      - name: Tag Docker Images
        run: |
          API_IMAGE=${{ vars.ACR_URL }}/netflix/api

          VERSION=${{ vars.MAJOR_VERSION }}.${{ vars.MINOR_VERSION }}.${{ github.run_number }}

          docker tag $API_IMAGE:latest $API_IMAGE:$VERSION

      - name: Save Docker Images
        run: |
          API_IMAGE=${{ vars.ACR_URL }}/netflix/api

          docker save -o nestflix_api.tar $API_IMAGE

      - name: Upload Api Docker Image
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: nestflix_api
          path: nestflix_api.tar
          retention-days: 1

  deploy_docker_artifacts:
    name: Deploy Docker Artifacts
    runs-on: ubuntu-latest
    needs: [build_docker_artifacts, integration]
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1

      - name: Login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.ACR_URL }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Download Api Docker Image
        uses: actions/download-artifact@v4
        with:
          name: nestflix_api

      - name: Load Docker Image
        run: |
          docker load -i nestflix_api.tar

      - name: Push latest Docker Images
        working-directory: "${{ github.workspace }}/src/"
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_REGISTRY: ${{ vars.ACR_URL }}/
        run: |
          docker compose -f docker-compose.yml push

      - name: Push Docker Images with Version
        working-directory: "${{ github.workspace }}/src/"
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_REGISTRY: ${{ vars.ACR_URL }}/
          TAG: ${{ vars.MAJOR_VERSION }}.${{ vars.MINOR_VERSION }}.${{ github.run_number }}
        run: |
          docker compose -f docker-compose.yml push

  deploy_2container_app:
    name: Deploy to Container App
    runs-on: ubuntu-latest
    needs: [deploy_docker_artifacts]
    if: github.event_name != 'pull_request'
    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Api Image to Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          imageToDeploy: ${{ vars.ACR_URL }}/netflix/api:${{ vars.MAJOR_VERSION }}.${{ vars.MINOR_VERSION }}.${{ github.run_number }}
          resourceGroup: ${{ vars.RESOURCE_GROUP }}
          containerAppName: ${{ vars.CONTAINER_APP_NAME }}
